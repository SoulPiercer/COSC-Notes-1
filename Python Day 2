Strings are iterable, can index each character
  myStr[i]
LIST METHOD:

takes every character from a string and puts it in a list. 

SPLIT METHOD:

Makes a list of each individual word.
  myStr.split()
 
 
JOIN MEHTOD:

  ' '.join(newStr) 
will join the list with delimeter placed before the period. (in this case, the delimeter is white space) 


STRING / LIST SLICING
sudo cat /etc/shadow
>>> shadow_user = 'student:$6$kkUnWh2v$IMjH5E98NEYAWtvS1joiI6v6ErxnMQbukUR3d/fjz1xvXEqkVuMmCTLBU2wyq2OaZQaKfp1YOl.gh/8/a5FAO.:19529:0:99999:7:::'


>>> ':'.join(shadow_user.split(':')[0:2])
'student:$6$kkUnWh2v$IMjH5E98NEYAWtvS1joiI6v6ErxnMQbukUR3d/fjz1xvXEqkVuMmCTLBU2wyq2OaZQaKfp1YOl.gh/8/a5FAO.'

F STRINGS

>>> name = 'Riesmeyer'
>>> rank = 'LCPL'
>>> mod = 'Python'
>>> 
>>> f'Hello {rank} {name}, you will be teaching {mod} today.'
'Hello LCPL Riesmeyer, you will be teaching Python today.'

### place f infront of string or... 
### .format(rank,name,mod) after string

  1 name = input("What is your name?: ")
  2 quest = input("What is your quest?: ")
  3 color = input("What is your favorite color?: ")
  4 
  5 print(f'You are {name}, your quest is {quest} and your favorite color is {color}.')
  6 


SPLITING WITH DIFFERENT DELIMETERS:

>>> email = 'chesty.puller@usmc.mil'
>>> atted = email.split('@')
>>> atted
['chesty.puller', 'usmc.mil']
>>> '.'.join(atted)
'chesty.puller.usmc.mil'
>>> joined = '.'.join(atted)
>>> joined.split('.')
['chesty', 'puller', 'usmc', 'mil']

FUNCTIONS:

FOR LOOPS:

  myGrades = [60, 70, 70, 80, 40, 20]
>>> for i in myGrades:
  ...     if i < 70:
  ...             print(f'{i} is a failing score!')
  ... 
  60 is a failing score!
  40 is a failing score!
  20 is a failing score!

WHILE LOOPS:
  break statement
  continue statement
  += or -= increment

RANGE:

  START -- STOP -- STEP

  range(0,10,1)
  iterable objects
  can put into for loops and list it using list()
  
  Finding 8-bit values:
  for i in range(0,8):
  range(0,10)[2]   returns third number in range. 


>>> myRange = list(range(0,100))
>>> myRange[0]
0
>>> myRange[-5]
95
PRINT LAST FIVE ITEMS IN A RANGE.
>>> myRange[-5:]
[95, 96, 97, 98, 99]

GO BACKWARDS:
>>> myRange[::-1]
[99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]

  3 def invert(l):
  4     '''Inverts the given list
  5     Args:
  6         l (list): list of strings representing integers in the range [0-255]
  7     Returns:
  8         None
  9     '''
 10     i = 0
 11     while i < len(l):
 12         for n in l:
 13             l[i] = str(255 - int(n))
 14             i += 1
 15 
 16 
 17     return l
 18 
 19 
 20   
 21 
 22 def inverted(l):
 23     '''Returns a new list that is the given list inverted
 24     Args:
 25         l (list): list of strings representing integers in the range [0-255]
 26     Returns:
 27         list: new list that is the given list inverted
 28    '''
 29 
 30     newList = []
 31     for n in l:
 32         newList.append(str(255 - int(n)))
 33     return newList

